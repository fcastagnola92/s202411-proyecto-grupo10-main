name: Test coverage routes 🐍
on:
  push:
    branches: 
      - main
      - develop
jobs:
  test_routes:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: route-db

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      
      - name: Install pipenv
        working-directory: delivery-together-route-api
        run: pip install pipenv
      - name: Install dependencies
        working-directory: delivery-together-route-api
        run: |
          python -m pip install --upgrade pip
          pipenv install -r requirements.txt
      - name: Run unit tests 🧪
        working-directory: delivery-together-route-api
        run: pipenv run pytest --cov=src -v -s --cov-fail-under=70

    # steps:
    # - name: Checkout repository
    #   uses: actions/checkout@v2

    # - name: Set up Python
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: 3.x

    # - name: Install dependencies
    #   working-directory: delivery-together-route-api
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt


    # - name: Run tests and measure coverage 🧪
    #   working-directory: delivery-together-route-api
    #   run: |
    #     coverage run -m unittest discover -s tests
    #     coverage xml -o $GITHUB_WORKSPACE/coverage.xml
    #     coverage report -m
    #     cat $GITHUB_WORKSPACE/coverage.xml

    
    # - name: Check coverage threshold
    #   working-directory: delivery-together-route-api
    #   run: |
    #     COVERAGE_THRESHOLD=95
    #     ACTUAL_COVERAGE=$(grep -oP '(?<=line-rate=")[^"]*' $GITHUB_WORKSPACE/coverage.xml)
    #     echo "actual coverage $ACTUAL_COVERAGE"

    #     if ((ACTUAL_COVERAGE < COVERAGE_THRESHOLD)); then
    #       echo "Error: Coverage is below the required threshold of $COVERAGE_THRESHOLD%"
    #       exit 1
    #     fi
