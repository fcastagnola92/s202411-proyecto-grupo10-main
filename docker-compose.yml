version: '3.8'

services:
  posts:
    container_name: delivery-together-post-api
    build:
      context: ./delivery-together-post-api/.
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
       ENVIRONMENT: develop
       PORT: 3001
       VERSION: 1.0
       DB_USER: postgres
       DB_PASSWORD: postgres
       DB_HOST: posts_db
       DB_PORT: 5432
       DB_NAME: post-db
       USERS_PATH: http://users:3000
    volumes:
      - ./delivery-together-post-api/.:/usr/src/app
    networks:
      - post_net
      - app_net
    depends_on:
      - posts_db
      - users
    links:
      - posts_db
      - users
  posts_db:
    container_name: post-db
    image: postgres:latest
    env_file:
      -  ./delivery-together-post-api/.env.db
    volumes:
      - ./delivery-together-post-api/data/postgres:/var/lib/postgresql/data
    networks:
      - post_net
  users:
    container_name: delivery-together-user-api
    build: ./delivery-together-user-api/.
    ports:
      - "3000:3000"
    environment:
       NODE_ENV: development
       APP_PORT: 3000
       DB_USER: postgres
       DB_PASSWORD: postgres
       DB_HOST: users_db
       DB_PORT: 5432
       DB_NAME: user-db
    networks:
      - user_net
      - app_net
    depends_on:
      - users_db
    links:
      - users_db
  users_db:
    container_name: user-db
    image: postgres:latest
    env_file:
      - ./delivery-together-user-api/.env.db
    volumes:
      - ./delivery-together-user-api/data/postgres:/var/lib/postgresql
    networks:
      - user_net

  routes:
    container_name: delivery-together-route-api
    build:
      context: ./delivery-together-route-api/.
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      ENVIRONMENT: develop
      FLASK_APP: src/app
      PORT: 3002
      VERSION: 1.0
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: routes_db
      DB_PORT: 5432
      DB_NAME: route-db
      USERS_PATH: http://users:3000
    volumes:
      - ./delivery-together-route-api/.:/usr/src/app
    networks:
      - route_net
      - app_net
    depends_on:
      - routes_db
      - users
    links:
      - routes_db
      - users
  routes_db:
    container_name: routes-db
    image: postgres:latest
    env_file:
      -  ./delivery-together-route-api/.env.db
    volumes:
      - ./delivery-together-route-api/data/postgres:/var/lib/postgresql
    networks:
      - route_net

  offers:
    container_name: delivery-together-offer-api
    build:
      context: ./delivery-together-offer-api/offer-solution/.
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
       ENVIRONMENT: develop
       PORT: 3003
       VERSION: 1.0
       DB_USER: postgres
       DB_PASSWORD: postgres
       DB_HOST: offers_db
       DB_PORT: 5432
       DB_NAME: offer-db
       USERS_PATH: http://users:3000
    volumes:
      - ./delivery-together-offer-api/offer-solution/.:/usr/src/app
    networks:
      - offer_net
      - app_net
    depends_on:
      - offers_db
      - users
    links:
      - offers_db
      - users
  offers_db:
    container_name: offers-db
    image: postgres:latest    
    env_file:
      -  ./delivery-together-offer-api/offer-solution/.env.db
      
    volumes:
      - ./delivery-together-offer-api/offer-solution/data/postgres:/var/lib/postgresql/data
    networks:
      - offer_net

networks:
  post_net:
    name: post_net
    driver: bridge
  user_net:
    name: user_net
    driver: bridge
  app_net:
    name: app_net
    driver: bridge
  route_net:
    name: route_net
    driver: bridge
  offer_net:
    name: offer_net
    driver: bridge