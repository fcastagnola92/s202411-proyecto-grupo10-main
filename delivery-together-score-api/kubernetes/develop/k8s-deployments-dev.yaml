###################################
# delivery-together-score-api
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delivery-together-score-api
  labels:
    app: delivery-together-score-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: delivery-together-score-api
  template:
    metadata:
      labels:
        app: delivery-together-score-api
    spec:
      containers:
        - name: delivery-together-score-api
          image: caprilespe/delivery-together-post-api:1.0.0
          env:
            - name: "NODE_ENV"
              valueFrom:
                configMapKeyRef:
                  name: score-configmap
                  key: NODE_ENV
            - name: "APP_ENV"
              valueFrom:
                configMapKeyRef:
                  name: score-configmap
                  key: APP_ENV
            - name: "PORT"
              valueFrom:
                configMapKeyRef:
                  name: score-configmap
                  key: PORT
            - name: "USERS_PATH"
              valueFrom:
                configMapKeyRef:
                  name: score-configmap
                  key: USERS_PATH
            - name: "DEBUG"
              valueFrom:
                configMapKeyRef:
                  name: score-configmap
                  key: DEBUG
            - name: "LOG_LEVEL"
              valueFrom:
                configMapKeyRef:
                  name: score-configmap
                  key: LOG_LEVEL
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: score-secrets 
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: score-secrets 
                  key: DB_PASSWORD
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: score-secrets 
                  key: DB_HOST
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: score-secrets 
                  key: DB_PORT
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: score-secrets 
                  key: DB_NAME
          ports:
            - containerPort: 3001
          imagePullPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: delivery-together-score-service
spec:
  type: ClusterIP
  selector:
    app: delivery-together-score-api
  ports:
    - protocol: TCP
      port: 3004
      targetPort: 3004
---
###################################
# delivery-together-user-api
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: delivery-together-user-api
  labels:
    app: delivery-together-user-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: delivery-together-user-api
  template:
    metadata:
      labels:
        app: delivery-together-user-api
    spec:
      containers:
        - name: delivery-together-user-api
          image: caprilespe/delivery-together-user-api:1.0.0
          env:
            - name: "NODE_ENV"
              valueFrom:
                configMapKeyRef:
                  name: user-configmap
                  key: NODE_ENV
            - name: "APP_PORT"
              valueFrom:
                configMapKeyRef:
                  name: user-configmap
                  key: APP_PORT
            - name: "VERSION"
              valueFrom:
                configMapKeyRef:
                  name: user-configmap
                  key: VERSION
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: user-secrets 
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: user-secrets 
                  key: DB_PASSWORD
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: user-secrets 
                  key: DB_HOST
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: user-secrets 
                  key: DB_PORT
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: user-secrets 
                  key: DB_NAME
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: delivery-together-user-service
spec:
  type: ClusterIP
  selector:
    app: delivery-together-user-api
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
###################################
# delivery-together-db
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delivery-together-db
  labels:
    app: delivery-together-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: delivery-together-db
  template:
    metadata:
      labels:
        app: delivery-together-db
    spec:
      containers:
        - name: delivery-together-db
          env:
            - name: "POSTGRES_DB"
              valueFrom:
                secretKeyRef:
                  name: db-secrets 
                  key: POSTGRES_DB
            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  name: db-secrets 
                  key: POSTGRES_USER
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: db-secrets 
                  key: POSTGRES_PASSWORD
            - name: "POSTGRES_PORT"
              valueFrom:
                secretKeyRef:
                  name: db-secrets 
                  key: POSTGRES_PORT
          image: postgres:latest
          ports:
            - containerPort: 5432
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: delivery-together-db
spec:
  type: NodePort
  selector:
    app: delivery-together-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 31010